# API service for discovery and port linking
apiVersion: v1
kind: Service
metadata:
  name: time-api-svc
  labels:
    app: time-api
    service: time-api-svc
spec:
  ports:
  - port: 5000
    name: http
  selector:
    app: time-api
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: time-api
  labels:
    account: timeuser
---
# API endpoint deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: time-api-deploy
  labels:
    app: time-api
    ver: 0.1.4
    environment: production
    release: time-api-stable
    # releasesha256: "sha256:2749c56d99c7e9c85b97b5fd756a3de07471c44e27695305594ec52e143da937"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 3
      maxSurge: 2
  selector:
    matchLabels:
      app: time-api
      ver: 0.1.4
    matchExpressions:
      - {key: environment, operator: In, values: [production]}
  template:
    metadata:
      labels:
        app: time-api
        ver: 0.1.4
        environment: production
    #     sha256: "sha256:2749c56d99c7e9c85b97b5fd756a3de07471c44e27695305594ec52e143da937"
    spec:
      containers:
      - name: time-api-container
        image: harbor.shared.12factor.xyz/adamf/python-flask-time-api-image:v1-debian-bullseye 
        imagePullPolicy: Always
        env:
        - name: DATABASE_HOST
          value: timedb.shared.12factor.xyz
        - name: PORT
          value: "5000"
        # - name: DATABASE_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: address-book-db-password
        #       key: address-book-db-password
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports: # Note this MUST match the port exposed by the container itself (other you'll get an unresponsive endpoint error)
        - containerPort: 5000
---